/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/opHV3FOExMc
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Arimo } from 'next/font/google'
import { Libre_Franklin } from 'next/font/google'

arimo({
  subsets: ['latin'],
  display: 'swap',
})

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import Image from "next/image";
import { useState } from "react";
import { useNavStore } from "../app/Zustand/Zustand";

export function AdressLookup() {
  // const router = useRouter();

  //use store
  // const setBuilding = useNavStore((state) => state.setBuilding);
  // const building = useNavStore((state) => state.building);
  // const setPostcode = useNavStore((state) => state.setPostcode);
  // const postcode = useNavStore((state) => state.postcode);
  const setUprn = useNavStore((state) => state.setUprn);
  const uprn = useNavStore((state) => state.uprn);
  const warning = useNavStore((state) => state.warning);
  return (
    <section className="flex justify-center w-full py-12 md:py-24 lg:py-32">
      <div className="container space-y-8 px-4 md:px-6">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8 flex items-center">
          <div className="space-y-4 text-center md:text-left">
            <h1 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl">
              Demystify Retrofit for Your Building
            </h1>
            <p className="max-w-[700px] text-gray-500 md:text-xl dark:text-gray-400">
              {/* Enter your building number and post code to get a personalized
              carbon estimation and policy compliance check for your building
              RetroAction. */}
              {/* Enter your Unique Property Reference Number to get a personalized
              carbon estimation and policy */}
              Enter your UPRN to get a personalised estimate of cost and carbon
              benefits and relevant policy documents
              {/* compliance check for your building RetroAction. You can look your
              UPRN up{" "}
              <a href="https://uprn.uk/" className="text-blue-300">
                here
              </a> */}
              .
            </p>
            <div className="flex max-w-xl flex-col space-y-4">
              <div className="grid grid-cols-1 gap-4">
                {/* <div className="space-y-2">
                  <Label htmlFor="building">Building Number</Label>
                  <Input
                    id="building"
                    placeholder="46"
                    value={building}
                    onChange={(e) => setBuilding(e.target.value)}
                  />
                </div> */}
                {/* <div className="space-y-2">
                  <Label htmlFor="postcode">Post Code</Label>
                  <Input
                    id="postcode"
                    placeholder="WC1N2AJ"
                    onKeyUp={(e) =>
                      (e.target.value = e.target.value.replace(/\s/g, ""))
                    }
                    value={postcode}
                    onChange={(e) =>
                      setPostcode(e.target.value.replace(/\s/g, ""))
                    }
                  />
                </div> */}
                <div className="w-full">
                  <Label htmlFor="postcode">
                    Unique Property Reference Number (UPRN)
                  </Label>
                  <Input
                    id="uprninput"
                    placeholder="10033632047"
                    onKeyUp={(e) =>
                      (e.target.value = e.target.value.replace(/\s/g, ""))
                    }
                    // value={uprn}
                    onChange={(e) => setUprn(e.target.value.replace(/\s/g, ""))}
                  />
                  <div className="mt-2 text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 text-red-500">
                    {warning ? "Please enter a valid UPRN" : null}
                  </div>
                </div>
              </div>
              <Button
                className="w-full"
                type="submit"
                // to={`/data?building=${building}&postcode=${postcode}`}
                to="/data"
                uprn={uprn}
              >
                Get Estimate
              </Button>
            </div>
          </div>
          <div className="rounded-xl">
            <Image
              alt="Hero Image"
              className="h-full w-full object-cover"
              height="800"
              src="/adress2.png"
              style={{
                aspectRatio: "800/800",
                objectFit: "cover",
              }}
              width="800"
            />
          </div>
        </div>
      </div>
    </section>
  );
}
